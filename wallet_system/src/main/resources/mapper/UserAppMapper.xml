<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wallet.system.mapper.UserAppMapper">

	<select id="getInvestmentListByUser" parameterType="com.wallet.system.vo.UserInfoVO" resultType="com.wallet.system.vo.InvestmentVO">
		select 
			A.investment_id,
			C.user_email AS user_email,
			C.user_name  AS user_name,
			C.user_id AS user_id,
			B.investment_category_name AS product_name,
			B.cateogry_fil_per_tb AS cateogry_fil_per_tb,
			B.investment_category_index AS investment_category_id,
			A.purchase_date,
			A.purchase_size
		 from Investment_Info AS A
		 INNER JOIN Investment_Category AS B ON A.investment_category_id = B.investment_category_index
		 INNER JOIN User_Info AS C ON A.user_id  = C.user_id
		 WHERE B.status ='사용' AND A.status='active' AND C.user_status='정상' AND A.user_id = #{user_id}
	</select>
	<select id="getTokenPaidDetailListByUser" parameterType="com.wallet.system.vo.UserInfoVO" resultType="com.wallet.system.vo.TokenPaidDetailVO">
		select 
			tpdi.paid_fil,
			ic.investment_category_name, 
			tpi.status,
			tpi.paid_date
		from TokenPaid_detail_info tpdi  
		inner join Investment_Category ic 
		ON tpdi.investment_category_index = ic.investment_category_index
		inner join TokenPaid_Info tpi
		ON tpdi.token_paid_id = tpdi.token_paid_id
		where tpdi.user_id = #{user_id}
	</select>
	
	<insert id="addWalletWithdrawal" parameterType="com.wallet.system.vo.WalletWithdrawalVO">
		insert  into Wallet_Withdrawals (user_id,fil_amount,status,wallet_address,request_date)
			VALUES(#{user_id},#{fil_amount},'신청',#{wallet_address},NOW())
	</insert>
	<select id="selectWalletWithdrawalByUser" parameterType="com.wallet.system.vo.UserInfoVO" resultType="com.wallet.system.vo.WalletWithdrawalVO">
		select 
			wallet_withdrawals_id,
			user_id,
			fil_amount,
			status,
			message,
			wallet_address,
			request_date,
			complete_date
		from Wallet_Withdrawals   
		where user_id = #{user_id}
	</select>
	<update id="updateUserProfileImg" parameterType="com.wallet.system.vo.UserInfoVO">
		UPDATE User_Info
			SET
		    profile_picture_url=#{profile_picture_url}
			WHERE
		    user_id = #{user_id}
	</update>
	<update id="updateUserPassword" parameterType="com.wallet.system.vo.UserInfoVO">
		UPDATE User_Info
			SET
		    password = #{password}
			WHERE
		    user_id = #{user_id}
	</update>
	
	<select id="selectUserPassword" parameterType="integer" resultType="string">
		select 
			password
		 from User_Info
		where user_id=#{user_id}
	</select>
	<select id="selectEventsByUser" parameterType="integer" resultType="com.wallet.system.vo.EventsAnnouncementVO">
		SELECT ea.id, reg_date, title, body, admin, event_or_announcement,eauvr.read_date 
			FROM ipfskdcw.events_announcements ea LEFT JOIN events_announcement_user_view_record eauvr ON ea.id = eauvr.events_announcements_id
			WHERE ea.event_or_announcement ='event'
	</select>
	<select id="selectAnnouncementByUser" parameterType="integer" resultType="com.wallet.system.vo.EventsAnnouncementVO">
		SELECT ea.id, reg_date, title, body, admin, event_or_announcement,eauvr.read_date 
			FROM ipfskdcw.events_announcements ea LEFT JOIN events_announcement_user_view_record eauvr ON ea.id = eauvr.events_announcements_id
			WHERE ea.event_or_announcement ='announcement'
	</select>
	
	<select id="selectDetailUserInfoByUserId"  parameterType="integer" resultType="com.wallet.system.vo.UserInfoVO">
		select 
			u.user_id,
			u.user_reg_date,
			u.fil_amount + 
			(SELECT COALESCE(SUM(tpdi.paid_fil), 0) from TokenPaid_detail_info tpdi inner join TokenPaid_Info tpi ON tpi.token_paid_id =tpdi.token_paid_id WHERE tpi.status='정상' AND u.user_id =tpdi.user_id) 
			- (SELECT COALESCE(SUM(fil_amount), 0) from Wallet_Withdrawals ww WHERE ww.user_id = u.user_id AND ww.status ='승인') 
			AS total_balance,
			(SELECT COALESCE(SUM(tpdi.paid_fil), 0) from TokenPaid_detail_info tpdi inner join TokenPaid_Info tpi ON tpi.token_paid_id =tpdi.token_paid_id WHERE tpi.status='정상' AND u.user_id =tpdi.user_id) 
			- (SELECT COALESCE(SUM(fil_amount), 0) from Wallet_Withdrawals ww WHERE ww.user_id = u.user_id AND ww.status !='거부') 
			AS available_balance,
			u.user_name,
			u.user_email,u.user_status,
			u.user_phone,
			u.profile_picture_url
		 from User_Info u	
		 where user_id=#{user_id}
		 GROUP BY u.user_email
	</select>
</mapper>